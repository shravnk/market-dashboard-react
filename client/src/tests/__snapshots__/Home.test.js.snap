// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`component renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Home
    actions={
        Object {
            "clearHistoryData": [Function],
            "fetchStockDetailedData": [Function],
            "fetchStockHistory": [Function],
            "fetchStocksCurrentData": [Function],
          }
    }
    stocks={
        Object {
            "currentData": Array [],
            "historyData": Array [
              "A",
              "B",
              "C",
            ],
            "historyReady": false,
            "historySymbol": "T",
          }
    }
    user={
        Object {
            "stocks": Array [],
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="row"
        id="Home"
>
        <div
                className="col-md-8"
        >
                <withRouter(CurrentTable)
                        displayHistory={[Function]}
                        fetchData={[Function]}
                        fetchHistory={[Function]}
                        sectors={Object {}}
                        stocks={Array []}
                />
        </div>
        <div
                className="col-md-4 offset-md-8 text-center"
                style={
                        Object {
                                "position": "fixed",
                              }
                }
        >
                <br />
                <PriceHistory
                        display={true}
                        historyData={
                                Array [
                                        "A",
                                        "B",
                                        "C",
                                      ]
                        }
                        ready={false}
                        symbol="T"
                />
        </div>
</div>,
      "className": "container-fluid",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="col-md-8"
>
            <withRouter(CurrentTable)
                        displayHistory={[Function]}
                        fetchData={[Function]}
                        fetchHistory={[Function]}
                        sectors={Object {}}
                        stocks={Array []}
            />
</div>,
          <div
            className="col-md-4 offset-md-8 text-center"
            style={
                        Object {
                                    "position": "fixed",
                                  }
            }
>
            <br />
            <PriceHistory
                        display={true}
                        historyData={
                                    Array [
                                                "A",
                                                "B",
                                                "C",
                                              ]
                        }
                        ready={false}
                        symbol="T"
            />
</div>,
        ],
        "className": "row",
        "id": "Home",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <withRouter(CurrentTable)
              displayHistory={[Function]}
              fetchData={[Function]}
              fetchHistory={[Function]}
              sectors={Object {}}
              stocks={Array []}
/>,
            "className": "col-md-8",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "displayHistory": [Function],
              "fetchData": [Function],
              "fetchHistory": [Function],
              "sectors": Object {},
              "stocks": Array [],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <br />,
              <PriceHistory
                display={true}
                historyData={
                                Array [
                                                "A",
                                                "B",
                                                "C",
                                              ]
                }
                ready={false}
                symbol="T"
/>,
            ],
            "className": "col-md-4 offset-md-8 text-center",
            "style": Object {
              "position": "fixed",
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "display": true,
                "historyData": Array [
                  "A",
                  "B",
                  "C",
                ],
                "ready": false,
                "symbol": "T",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="row"
          id="Home"
>
          <div
                    className="col-md-8"
          >
                    <withRouter(CurrentTable)
                              displayHistory={[Function]}
                              fetchData={[Function]}
                              fetchHistory={[Function]}
                              sectors={Object {}}
                              stocks={Array []}
                    />
          </div>
          <div
                    className="col-md-4 offset-md-8 text-center"
                    style={
                              Object {
                                        "position": "fixed",
                                      }
                    }
          >
                    <br />
                    <PriceHistory
                              display={true}
                              historyData={
                                        Array [
                                                  "A",
                                                  "B",
                                                  "C",
                                                ]
                              }
                              ready={false}
                              symbol="T"
                    />
          </div>
</div>,
        "className": "container-fluid",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="col-md-8"
>
              <withRouter(CurrentTable)
                            displayHistory={[Function]}
                            fetchData={[Function]}
                            fetchHistory={[Function]}
                            sectors={Object {}}
                            stocks={Array []}
              />
</div>,
            <div
              className="col-md-4 offset-md-8 text-center"
              style={
                            Object {
                                          "position": "fixed",
                                        }
              }
>
              <br />
              <PriceHistory
                            display={true}
                            historyData={
                                          Array [
                                                        "A",
                                                        "B",
                                                        "C",
                                                      ]
                            }
                            ready={false}
                            symbol="T"
              />
</div>,
          ],
          "className": "row",
          "id": "Home",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <withRouter(CurrentTable)
                displayHistory={[Function]}
                fetchData={[Function]}
                fetchHistory={[Function]}
                sectors={Object {}}
                stocks={Array []}
/>,
              "className": "col-md-8",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "displayHistory": [Function],
                "fetchData": [Function],
                "fetchHistory": [Function],
                "sectors": Object {},
                "stocks": Array [],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <br />,
                <PriceHistory
                  display={true}
                  historyData={
                                    Array [
                                                      "A",
                                                      "B",
                                                      "C",
                                                    ]
                  }
                  ready={false}
                  symbol="T"
/>,
              ],
              "className": "col-md-4 offset-md-8 text-center",
              "style": Object {
                "position": "fixed",
              },
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "br",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "display": true,
                  "historyData": Array [
                    "A",
                    "B",
                    "C",
                  ],
                  "ready": false,
                  "symbol": "T",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
